package IDE;
/**
    1、关于java的集成开发环境【集成开发环境简称：IDE】
        1.1、什么是集成开发环境？
             * 集成开发环境讲究一站式开发，使用这个工具即可。有提示功能，有自动纠错功能。
             * 集成开发环境可以让软件开发变的更简单、更高效。
             * 没有IDE工具：
                - 需要安装JDK、需要配置环境变量、需要手动的将java源文件编译生成class字节码文件
                - java源程序出错之后还没有提示
                - 没有自动提示功能等。
             * 有IDE工具：
                - 不需要独立安装JDK【IDE中已经集成】
                - 不需要使用javac命令对java源文件进行编译
                - 并且java源程序编写语法错误马上有提示
                - 使用IDE工具有很多代码不需要写，自动生成了。
        1.2、java有哪些比较牛的IDE呢？
             * eclipse(myeclipse)【最多】
             * Intellij IDEA【上升的趋势】
             * Netbeans
             * JBuilder
             ......
    2、面向对象的封装
        封装的好处：
            1、封装之后，对于那个事物来说，看不到这个事物比较复杂的那一面，
            只能看到事物简单的那一面。复杂性封装，对外提供简单的操作入口。
            照相机就是一个很好的封装的案例，照相机的实现原理非常复杂，但是对于使用
            照相机的刃来说，操作起来是非常方便的是非常快捷的。还有像电视机也是
            分装的，电视机内存实现非常复杂，但是对于使用者来说不需要关心内部的实现原理，
            只需要回操作遥控器就行。
            2、封装之后才会形成真正的"对象"，真正的"独立体"
            3、封装意味着以后的程序可以重复使用。并且这个事物应该适应性比较强，在任何场合都可以使用。
            4、封装之后，对于事物本身，提高了安全性。【安全级别高】

    3、构造方法的讲解

    5、对象和引用：
        5.1、对象和引用的概念？
            * 对象：目前在使用new运算符在堆内存中开辟的内存空间称为对象。
 *          * 引用：是一个变量，不一定是局部变量，还可能是成员变量。引用保存了内存对峙，指向了堆内存当中的对象。
 *          * 所有访问实例相关的数据，都需要通过"引用."的方式访问，因为只有通过引用才能找到对象。
 *          * 只有一个空的引用，访问对象的实例相关的数据会出现空指针异常
 *      5.2、参数的传递？
 *          主要研究和学习的是方法在调用的时候，涉及到参数传递的问题，到底是怎么传递数据的呢？
 *          int i = 10;
 *          int j = i;//i传递给j,实际上只是将i变量中保存的10传递给j了，j实际上是一块全新的内存空间。
 *
 *          User u = 0x1234;
 *          User u2 = u;//u传递给u2，实际上是将0x1234这个值赋值给u2了，u和u2实际上是两个不同的值，
 *                      //但是它们这两个变量指向堆内存中同一个java对象。
 */

public class IDE01 {
    public static void main(String[] args) {

    }
}
